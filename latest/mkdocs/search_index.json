{
    "docs": [
        {
            "location": "/", 
            "text": "Pagebuilder\n\n\nThis is the tool Glider Labs uses to generate and deploy project documentation.\n\n\n\n\nBuilt around \nMkDocs\n for generating sites based on Markdown\n\n\nDeploys to Github Pages under sub-directories for versioning\n\n\nAutomation and UI to keep and expose docs for other branches and old releases\n\n\nCentralizes theming and layout across all projects\n\n\nPackaged as a lightweight Docker container usable from anywhere\n\n\nDrop-in command to use from CircleCI without messy scripts\n\n\n\n\nMake documentation for your project following the instructions for \nMkDocs\n. Namely,\ncreating a \ndocs\n folder for Markdown and a \nmkdocs.yml\n file at the project root.\n\n\nConfiguration\n\n\nThe only extra configuration Pagebuilder expects in \nmkdocs.yml\n is:\n\n\ntheme_dir: /pagebuilder/theme\nextra:\n  name: \nyour project name\n\n  latest: \nlatest version\n\n  versions:\n    - master\n    - v1\n    - \nbranches and tags to link under versions nav\n\n\n\n\n\nPreviewing\n\n\nYou can preview your docs with Pagebuilder in Docker. Running from project root:\n\n\n$ docker run --rm -p 8000:8000 -v $PWD:/project gliderlabs/pagebuilder mkdocs serve\n\n\n\n\nCircleCI\n\n\nAdd a deployment command to your \ncircle.yml\n to build and publish the docs\nwith every build. Here is an example:\n\n\ndeployment:\n  master:\n    branch: master\n    commands:\n      - eval $(docker run gliderlabs/pagebuilder circleci-cmd)\n\n\n\n\nThis is a convenience wrapper that automates all the extra Docker flags needed to\nallow pushing the built site to \ngh-pages\n branch of the repo.\n\n\nYou need to run this command for every branch you want to build docs for. If\nyou want to use a branch other than \nmaster\n to be used for the \nlatest\n docs,\nspecify it with \nMASTER\n environment variable. Here is how you would tell it to\nuse \nrelease\n for latest. It will still make a \nrelease\n directory on Github Pages,\nbut the \nlatest\n directory will be a copy of it.\n\n\ndeployment:\n  master:\n    branch: master\n    commands:\n      - eval $(docker run -e MASTER=release gliderlabs/pagebuilder circleci-cmd)", 
            "title": "Home"
        }, 
        {
            "location": "/#pagebuilder", 
            "text": "This is the tool Glider Labs uses to generate and deploy project documentation.   Built around  MkDocs  for generating sites based on Markdown  Deploys to Github Pages under sub-directories for versioning  Automation and UI to keep and expose docs for other branches and old releases  Centralizes theming and layout across all projects  Packaged as a lightweight Docker container usable from anywhere  Drop-in command to use from CircleCI without messy scripts   Make documentation for your project following the instructions for  MkDocs . Namely,\ncreating a  docs  folder for Markdown and a  mkdocs.yml  file at the project root.", 
            "title": "Pagebuilder"
        }, 
        {
            "location": "/#configuration", 
            "text": "The only extra configuration Pagebuilder expects in  mkdocs.yml  is:  theme_dir: /pagebuilder/theme\nextra:\n  name:  your project name \n  latest:  latest version \n  versions:\n    - master\n    - v1\n    -  branches and tags to link under versions nav", 
            "title": "Configuration"
        }, 
        {
            "location": "/#previewing", 
            "text": "You can preview your docs with Pagebuilder in Docker. Running from project root:  $ docker run --rm -p 8000:8000 -v $PWD:/project gliderlabs/pagebuilder mkdocs serve", 
            "title": "Previewing"
        }, 
        {
            "location": "/#circleci", 
            "text": "Add a deployment command to your  circle.yml  to build and publish the docs\nwith every build. Here is an example:  deployment:\n  master:\n    branch: master\n    commands:\n      - eval $(docker run gliderlabs/pagebuilder circleci-cmd)  This is a convenience wrapper that automates all the extra Docker flags needed to\nallow pushing the built site to  gh-pages  branch of the repo.  You need to run this command for every branch you want to build docs for. If\nyou want to use a branch other than  master  to be used for the  latest  docs,\nspecify it with  MASTER  environment variable. Here is how you would tell it to\nuse  release  for latest. It will still make a  release  directory on Github Pages,\nbut the  latest  directory will be a copy of it.  deployment:\n  master:\n    branch: master\n    commands:\n      - eval $(docker run -e MASTER=release gliderlabs/pagebuilder circleci-cmd)", 
            "title": "CircleCI"
        }
    ]
}